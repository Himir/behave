<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="behave-execucao">

	<title>Execução de Testes</title>
	<para>
		Este capítulo apresenta recursos avançados para execução de testes com o Demoiselle Behave que
		podem auxiliar a montagem de um ambiente para execução de testes funcionais.
	</para>
	
	<section>
		<title>Execução Paralela</title>
		<para>
			A execução de testes de forma paralela pode ser uma alternativa para reduzir o 
			tempo de execução das baterias. Neste caso observe que esta abordagem aumenta a 
			necessidade de processamento da máquina de ativação dos testes, além disso deve-se 
			garantir a independência entre os testes para evitar falsos positivos.
		</para>
		<para>
			O Demoiselle Behave recomenda a utilização do plugin maven maven-surefire-plugin que
			gerencia a execução do teste conforme os seguintes parâmetros:
		</para>
		<itemizedlist>
			<listitem>forkCount: Determina o número máximo de threads que deverão ser paralelizadas</listitem>
			<listitem>reuseForks=false: Garante a execução das threads em JVMs isoladas. Esta configuração
			evita que dados utilizados por uma thread sejam afetadas por outras.</listitem>
			<listitem>parallel=classes. Define a estratégia de paralelização, neste caso, cada classe de 
			teste do JUnit será instanciada por uma thread até atingir o número máximo de threads (forkCount). 
			Recomendamos utilizar o nível de classe, pois havendo a necessidade de dependência entre os testes, 
			esta pode ser realizada dentro da classe JUnit.</listitem>
		</itemizedlist>
		<para>
			Segue abaixo o exemplo para configuração do plugin no arquivo pom.xml do projeto:
		</para>		
		<programlisting>
&lt;build&gt;
	&lt;plugins&gt;
		&lt;plugin&gt;
			&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
			&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
			&lt;version&gt;2.15&lt;/version&gt;
			&lt;configuration&gt;
				&lt;forkCount&gt;3&lt;/forkCount&gt; 				
				&lt;reuseForks&gt;false&lt;/reuseForks&gt; 
				&lt;parallel&gt;classes&lt;/parallel&gt;
			&lt;/configuration&gt;
		&lt;/plugin&gt;
	&lt;/plugins&gt;
&lt;/build&gt;			
		</programlisting>
		<para>		
		Para executar seu teste de forma paralela acine o menu “Run as → Maven Test” 
		do eclipse ou no terminal  execute “mvn test”.
		</para>
	</section>

	<section>
		<title>Modo Background</title>
		<para>
			A execução de testes em modo background é um recurso importante quando se deseja criar um ambiente 
			dedicado para execução de testes. Normalmente estes ambientes não possuem interface gráfica que 
			impedem o acionamento de navegadores.
		</para>
		<para>
			Outra situação comum acontece quando o testador executa os testes em sua estação de trabalho e 
			necessita utilizar outros programas que concorrerão com sua tela devido a utilização de navegadores.
		</para>
		<para>
			Para ambientes linux, que possuem ferramentas para emulação de tela, o Demoiselle Behave recomenda 
			a utilização da ferramenta Xvfb.
		</para>
		<para>
			Instalação:
		</para>

		<programlisting>apt-get install xvfb</programlisting>

		<para>
			Execução do Xvfb:
		</para>

		<programlisting>Xvfb :2 -screen 0 1024x768x24</programlisting>

		<para>
			É possível instanciar vários processos Xvfb por meio de identificadores diferentes. 
			No exemplo acima foi definido com o identificaro “2”
		</para>

		<para>
			Para executar um aplicativo que utiliza a interface gráfica acione o comando DISPLAY:
		</para>
		
		<programlisting>DISPLAY=:2 firefox</programlisting>

		<para>
			Para rodar um teste no xvfb, basta rodar:
		</para>

		<programlisting>DISPLAY=:2 mvn test</programlisting>

		<para>
			Para visualizar processos rodando no Xvfb use o x11vnc (apt-get install x11vnc)  
			que  instanciará o serviço vnc para um identificador xvfb específico:
		</para>
		<programlisting>x11vnc -display :2</programlisting>
	</section>

	<section>
		<title>Integração Contínua</title>
		<para>
			Para execução de testes funcionais em modo background sob um ambiente de integração contínua 
			se faz necessário a instalação de plugins que permitam gerenciar o Xvfb. O Jenkins possui o 
			plugin:
			<ulink
				url	="https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin">https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin
			</ulink>
			que permite realizar este controle.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-01.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-01.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Xvfb Plugin</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Após instalar o plugin configure-o pelo menu “Gerenciar o Jenkins → Configurar o sistema” na seção
			Xvfb installation, informe um nome “padrão” e a pasta em que o executável do Xvfb foi instalado “/usr/bin”.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-02.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-02.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Configuração do Sistema</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Para cada projeto Jenkins configure na seção “Ambiente de Construção” a 
			instalação, seu timeout, as dimensões da tela e seu display:
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-03.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-03.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Configuração do Projeto</para>
				</caption>
			</mediaobject>
		</para>			
		<para>
			Ao executar seu projeto, o Jenkins iniciará o Xvfb antes da construção da build 
			e finalizar o processo ao final da build:
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-04.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-04.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Console</para>
				</caption>
			</mediaobject>
		</para>			
	</section>
		
</chapter>
