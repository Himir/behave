/*
* generated by Xtext
*/

package br.gov.frameworkdemoiselle.behave.plugin.eclipse.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class StoryDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNLTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cFuncionalidadeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFuncionalidadeFuncionalidadeParserRuleCall_1_0 = (RuleCall)cFuncionalidadeAssignment_1.eContents().get(0);
		private final RuleCall cNLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cUsuarioMetaRazaoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUsuarioMetaRazaoUsuarioMetaRazaoParserRuleCall_3_0 = (RuleCall)cUsuarioMetaRazaoAssignment_3.eContents().get(0);
		private final Assignment cCenariosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCenariosCenarioParserRuleCall_4_0 = (RuleCall)cCenariosAssignment_4.eContents().get(0);
		
		//Model:
		//	NL* funcionalidade=Funcionalidade NL* usuarioMetaRazao+=UsuarioMetaRazao? cenarios+=Cenario+;
		public ParserRule getRule() { return rule; }

		//NL* funcionalidade=Funcionalidade NL* usuarioMetaRazao+=UsuarioMetaRazao? cenarios+=Cenario+
		public Group getGroup() { return cGroup; }

		//NL*
		public RuleCall getNLTerminalRuleCall_0() { return cNLTerminalRuleCall_0; }

		//funcionalidade=Funcionalidade
		public Assignment getFuncionalidadeAssignment_1() { return cFuncionalidadeAssignment_1; }

		//Funcionalidade
		public RuleCall getFuncionalidadeFuncionalidadeParserRuleCall_1_0() { return cFuncionalidadeFuncionalidadeParserRuleCall_1_0; }

		//NL*
		public RuleCall getNLTerminalRuleCall_2() { return cNLTerminalRuleCall_2; }

		//usuarioMetaRazao+=UsuarioMetaRazao?
		public Assignment getUsuarioMetaRazaoAssignment_3() { return cUsuarioMetaRazaoAssignment_3; }

		//UsuarioMetaRazao
		public RuleCall getUsuarioMetaRazaoUsuarioMetaRazaoParserRuleCall_3_0() { return cUsuarioMetaRazaoUsuarioMetaRazaoParserRuleCall_3_0; }

		//cenarios+=Cenario+
		public Assignment getCenariosAssignment_4() { return cCenariosAssignment_4; }

		//Cenario
		public RuleCall getCenariosCenarioParserRuleCall_4_0() { return cCenariosCenarioParserRuleCall_4_0; }
	}

	public class UsuarioMetaRazaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UsuarioMetaRazao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComoUmKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNome_do_atorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNome_do_atorNOME_DO_ATORParserRuleCall_1_0 = (RuleCall)cNome_do_atorAssignment_1.eContents().get(0);
		private final RuleCall cNLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cEuQueroKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMeta_a_ser_alcancadaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMeta_a_ser_alcancadaMETA_A_SER_ALCANCADAParserRuleCall_4_0 = (RuleCall)cMeta_a_ser_alcancadaAssignment_4.eContents().get(0);
		private final RuleCall cNLTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cDeModoQueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRazao_para_alcancar_metaAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRazao_para_alcancar_metaRAZAO_PARA_ALCANCAR_A_METAParserRuleCall_7_0 = (RuleCall)cRazao_para_alcancar_metaAssignment_7.eContents().get(0);
		private final RuleCall cNLTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//UsuarioMetaRazao:
		//	"Como um: " nome_do_ator=NOME_DO_ATOR NL* "Eu quero: " meta_a_ser_alcancada=META_A_SER_ALCANCADA NL* "De modo que: "
		//	razao_para_alcancar_meta=RAZAO_PARA_ALCANCAR_A_META NL*;
		public ParserRule getRule() { return rule; }

		//"Como um: " nome_do_ator=NOME_DO_ATOR NL* "Eu quero: " meta_a_ser_alcancada=META_A_SER_ALCANCADA NL* "De modo que: "
		//razao_para_alcancar_meta=RAZAO_PARA_ALCANCAR_A_META NL*
		public Group getGroup() { return cGroup; }

		//"Como um: "
		public Keyword getComoUmKeyword_0() { return cComoUmKeyword_0; }

		//nome_do_ator=NOME_DO_ATOR
		public Assignment getNome_do_atorAssignment_1() { return cNome_do_atorAssignment_1; }

		//NOME_DO_ATOR
		public RuleCall getNome_do_atorNOME_DO_ATORParserRuleCall_1_0() { return cNome_do_atorNOME_DO_ATORParserRuleCall_1_0; }

		//NL*
		public RuleCall getNLTerminalRuleCall_2() { return cNLTerminalRuleCall_2; }

		//"Eu quero: "
		public Keyword getEuQueroKeyword_3() { return cEuQueroKeyword_3; }

		//meta_a_ser_alcancada=META_A_SER_ALCANCADA
		public Assignment getMeta_a_ser_alcancadaAssignment_4() { return cMeta_a_ser_alcancadaAssignment_4; }

		//META_A_SER_ALCANCADA
		public RuleCall getMeta_a_ser_alcancadaMETA_A_SER_ALCANCADAParserRuleCall_4_0() { return cMeta_a_ser_alcancadaMETA_A_SER_ALCANCADAParserRuleCall_4_0; }

		//NL*
		public RuleCall getNLTerminalRuleCall_5() { return cNLTerminalRuleCall_5; }

		//"De modo que: "
		public Keyword getDeModoQueKeyword_6() { return cDeModoQueKeyword_6; }

		//razao_para_alcancar_meta=RAZAO_PARA_ALCANCAR_A_META
		public Assignment getRazao_para_alcancar_metaAssignment_7() { return cRazao_para_alcancar_metaAssignment_7; }

		//RAZAO_PARA_ALCANCAR_A_META
		public RuleCall getRazao_para_alcancar_metaRAZAO_PARA_ALCANCAR_A_METAParserRuleCall_7_0() { return cRazao_para_alcancar_metaRAZAO_PARA_ALCANCAR_A_METAParserRuleCall_7_0; }

		//NL*
		public RuleCall getNLTerminalRuleCall_8() { return cNLTerminalRuleCall_8; }
	}

	public class FuncionalidadeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Funcionalidade");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuncionalidadeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNome_funcionadadeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNome_funcionadadeIDENTIFICADOR_GERALParserRuleCall_1_0 = (RuleCall)cNome_funcionadadeAssignment_1.eContents().get(0);
		private final RuleCall cNLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Funcionalidade:
		//	"Funcionalidade: " nome_funcionadade=IDENTIFICADOR_GERAL NL*;
		public ParserRule getRule() { return rule; }

		//"Funcionalidade: " nome_funcionadade=IDENTIFICADOR_GERAL NL*
		public Group getGroup() { return cGroup; }

		//"Funcionalidade: "
		public Keyword getFuncionalidadeKeyword_0() { return cFuncionalidadeKeyword_0; }

		//nome_funcionadade=IDENTIFICADOR_GERAL
		public Assignment getNome_funcionadadeAssignment_1() { return cNome_funcionadadeAssignment_1; }

		//IDENTIFICADOR_GERAL
		public RuleCall getNome_funcionadadeIDENTIFICADOR_GERALParserRuleCall_1_0() { return cNome_funcionadadeIDENTIFICADOR_GERALParserRuleCall_1_0; }

		//NL*
		public RuleCall getNLTerminalRuleCall_2() { return cNLTerminalRuleCall_2; }
	}

	public class CenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCenRioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIdentificadorCenarioParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cXerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXerNLTerminalRuleCall_2_0 = (RuleCall)cXerAssignment_2.eContents().get(0);
		private final Assignment cSentencas_qualiteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSentencas_qualiteSentencaQualiteParserRuleCall_3_0 = (RuleCall)cSentencas_qualiteAssignment_3.eContents().get(0);
		
		//Cenario:
		//	"Cenário: " IdentificadorCenario xer+=NL* sentencas_qualite+=SentencaQualite*;
		public ParserRule getRule() { return rule; }

		//"Cenário: " IdentificadorCenario xer+=NL* sentencas_qualite+=SentencaQualite*
		public Group getGroup() { return cGroup; }

		//"Cenário: "
		public Keyword getCenRioKeyword_0() { return cCenRioKeyword_0; }

		//IdentificadorCenario
		public RuleCall getIdentificadorCenarioParserRuleCall_1() { return cIdentificadorCenarioParserRuleCall_1; }

		//xer+=NL*
		public Assignment getXerAssignment_2() { return cXerAssignment_2; }

		//NL
		public RuleCall getXerNLTerminalRuleCall_2_0() { return cXerNLTerminalRuleCall_2_0; }

		//sentencas_qualite+=SentencaQualite*
		public Assignment getSentencas_qualiteAssignment_3() { return cSentencas_qualiteAssignment_3; }

		//SentencaQualite
		public RuleCall getSentencas_qualiteSentencaQualiteParserRuleCall_3_0() { return cSentencas_qualiteSentencaQualiteParserRuleCall_3_0; }
	}

	public class IdentificadorCenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IdentificadorCenario");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDENTIFICADOR_CENARIOParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//IdentificadorCenario:
		//	name=IDENTIFICADOR_CENARIO;
		public ParserRule getRule() { return rule; }

		//name=IDENTIFICADOR_CENARIO
		public Assignment getNameAssignment() { return cNameAssignment; }

		//IDENTIFICADOR_CENARIO
		public RuleCall getNameIDENTIFICADOR_CENARIOParserRuleCall_0() { return cNameIDENTIFICADOR_CENARIOParserRuleCall_0; }
	}

	public class SentencaQualiteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SentencaQualite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExecutarCenarioParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cListaItensParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMetaParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//SentencaQualite:
		//	ExecutarCenario | ListaItens | Meta;
		public ParserRule getRule() { return rule; }

		//ExecutarCenario | ListaItens | Meta
		public Alternatives getAlternatives() { return cAlternatives; }

		//ExecutarCenario
		public RuleCall getExecutarCenarioParserRuleCall_0() { return cExecutarCenarioParserRuleCall_0; }

		//ListaItens
		public RuleCall getListaItensParserRuleCall_1() { return cListaItensParserRuleCall_1; }

		//Meta
		public RuleCall getMetaParserRuleCall_2() { return cMetaParserRuleCall_2; }
	}

	public class MetaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Meta");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cXMetaKeyword_0_0 = (Keyword)cXAssignment_0.eContents().get(0);
		private final RuleCall cNLTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cLista_metasAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLista_metasListaMetasParserRuleCall_2_0 = (RuleCall)cLista_metasAssignment_2.eContents().get(0);
		
		//Meta:
		//	x="Meta:" NL* lista_metas+=ListaMetas+;
		public ParserRule getRule() { return rule; }

		//x="Meta:" NL* lista_metas+=ListaMetas+
		public Group getGroup() { return cGroup; }

		//x="Meta:"
		public Assignment getXAssignment_0() { return cXAssignment_0; }

		//"Meta:"
		public Keyword getXMetaKeyword_0_0() { return cXMetaKeyword_0_0; }

		//NL*
		public RuleCall getNLTerminalRuleCall_1() { return cNLTerminalRuleCall_1; }

		//lista_metas+=ListaMetas+
		public Assignment getLista_metasAssignment_2() { return cLista_metasAssignment_2; }

		//ListaMetas
		public RuleCall getLista_metasListaMetasParserRuleCall_2_0() { return cLista_metasListaMetasParserRuleCall_2_0; }
	}

	public class ListaMetasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListaMetas");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cCommercialAtSpaceKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final RuleCall cIDENTIFICADOR_GERALParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cNLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ListaMetas:
		//	("@" | "@ ") IDENTIFICADOR_GERAL NL*;
		public ParserRule getRule() { return rule; }

		//("@" | "@ ") IDENTIFICADOR_GERAL NL*
		public Group getGroup() { return cGroup; }

		//"@" | "@ "
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"@"
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }

		//"@ "
		public Keyword getCommercialAtSpaceKeyword_0_1() { return cCommercialAtSpaceKeyword_0_1; }

		//IDENTIFICADOR_GERAL
		public RuleCall getIDENTIFICADOR_GERALParserRuleCall_1() { return cIDENTIFICADOR_GERALParserRuleCall_1; }

		//NL*
		public RuleCall getNLTerminalRuleCall_2() { return cNLTerminalRuleCall_2; }
	}

	public class ExecutarCenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExecutarCenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cDadoKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cQuandoKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cEntOKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cEKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Keyword cMasKeyword_0_4 = (Keyword)cAlternatives_0.eContents().get(4);
		private final Assignment cCenario_executar_refAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cCenario_executar_refCenarioCrossReference_1_0 = (CrossReference)cCenario_executar_refAssignment_1.eContents().get(0);
		private final RuleCall cCenario_executar_refCenarioIDENTIFICADOR_CENARIOParserRuleCall_1_0_1 = (RuleCall)cCenario_executar_refCenarioCrossReference_1_0.eContents().get(1);
		private final RuleCall cNLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ExecutarCenario:
		//	("Dado " | "Quando " | "Então " | "E " | "Mas ") cenario_executar_ref=[Cenario|IDENTIFICADOR_CENARIO] NL*;
		public ParserRule getRule() { return rule; }

		//("Dado " | "Quando " | "Então " | "E " | "Mas ") cenario_executar_ref=[Cenario|IDENTIFICADOR_CENARIO] NL*
		public Group getGroup() { return cGroup; }

		//"Dado " | "Quando " | "Então " | "E " | "Mas "
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"Dado "
		public Keyword getDadoKeyword_0_0() { return cDadoKeyword_0_0; }

		//"Quando "
		public Keyword getQuandoKeyword_0_1() { return cQuandoKeyword_0_1; }

		//"Então "
		public Keyword getEntOKeyword_0_2() { return cEntOKeyword_0_2; }

		//"E "
		public Keyword getEKeyword_0_3() { return cEKeyword_0_3; }

		//"Mas "
		public Keyword getMasKeyword_0_4() { return cMasKeyword_0_4; }

		//cenario_executar_ref=[Cenario|IDENTIFICADOR_CENARIO]
		public Assignment getCenario_executar_refAssignment_1() { return cCenario_executar_refAssignment_1; }

		//[Cenario|IDENTIFICADOR_CENARIO]
		public CrossReference getCenario_executar_refCenarioCrossReference_1_0() { return cCenario_executar_refCenarioCrossReference_1_0; }

		//IDENTIFICADOR_CENARIO
		public RuleCall getCenario_executar_refCenarioIDENTIFICADOR_CENARIOParserRuleCall_1_0_1() { return cCenario_executar_refCenarioIDENTIFICADOR_CENARIOParserRuleCall_1_0_1; }

		//NL*
		public RuleCall getNLTerminalRuleCall_2() { return cNLTerminalRuleCall_2; }
	}

	public class ListaItensElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListaItens");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_0_0 = (Alternatives)cGroup_0_0.eContents().get(0);
		private final Keyword cVerticalLineKeyword_0_0_0_0 = (Keyword)cAlternatives_0_0_0.eContents().get(0);
		private final Keyword cVerticalLineSpaceKeyword_0_0_0_1 = (Keyword)cAlternatives_0_0_0.eContents().get(1);
		private final Assignment cItemAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cItemIDENTIFICADOR_GERALParserRuleCall_0_0_1_0 = (RuleCall)cItemAssignment_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cVerticalLineKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Keyword cSpaceVerticalLineKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cNLTerminalRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cNLTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ListaItens:
		//	((("|" | "| ") item+=IDENTIFICADOR_GERAL)+ ("|" | " |") NL)+ NL*;
		public ParserRule getRule() { return rule; }

		//((("|" | "| ") item+=IDENTIFICADOR_GERAL)+ ("|" | " |") NL)+ NL*
		public Group getGroup() { return cGroup; }

		//((("|" | "| ") item+=IDENTIFICADOR_GERAL)+ ("|" | " |") NL)+
		public Group getGroup_0() { return cGroup_0; }

		//(("|" | "| ") item+=IDENTIFICADOR_GERAL)+
		public Group getGroup_0_0() { return cGroup_0_0; }

		//"|" | "| "
		public Alternatives getAlternatives_0_0_0() { return cAlternatives_0_0_0; }

		//"|"
		public Keyword getVerticalLineKeyword_0_0_0_0() { return cVerticalLineKeyword_0_0_0_0; }

		//"| "
		public Keyword getVerticalLineSpaceKeyword_0_0_0_1() { return cVerticalLineSpaceKeyword_0_0_0_1; }

		//item+=IDENTIFICADOR_GERAL
		public Assignment getItemAssignment_0_0_1() { return cItemAssignment_0_0_1; }

		//IDENTIFICADOR_GERAL
		public RuleCall getItemIDENTIFICADOR_GERALParserRuleCall_0_0_1_0() { return cItemIDENTIFICADOR_GERALParserRuleCall_0_0_1_0; }

		//"|" | " |"
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//"|"
		public Keyword getVerticalLineKeyword_0_1_0() { return cVerticalLineKeyword_0_1_0; }

		//" |"
		public Keyword getSpaceVerticalLineKeyword_0_1_1() { return cSpaceVerticalLineKeyword_0_1_1; }

		//NL
		public RuleCall getNLTerminalRuleCall_0_2() { return cNLTerminalRuleCall_0_2; }

		//NL*
		public RuleCall getNLTerminalRuleCall_1() { return cNLTerminalRuleCall_1; }
	}

	public class IDENTIFICADOR_CENARIOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IDENTIFICADOR_CENARIO");
		private final RuleCall cIDENTIFICADOR_GERALParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//IDENTIFICADOR_CENARIO:
		//	IDENTIFICADOR_GERAL;
		public ParserRule getRule() { return rule; }

		//IDENTIFICADOR_GERAL
		public RuleCall getIDENTIFICADOR_GERALParserRuleCall() { return cIDENTIFICADOR_GERALParserRuleCall; }
	}

	public class IDENTIFICADOR_GERALElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IDENTIFICADOR_GERAL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cEXIDTerminalRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cSpaceKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cEXIDTerminalRuleCall_1_1_1 = (RuleCall)cAlternatives_1_1.eContents().get(1);
		
		//IDENTIFICADOR_GERAL:
		//	(STRING | EXID) (" " (STRING | EXID))*;
		public ParserRule getRule() { return rule; }

		//(STRING | EXID) (" " (STRING | EXID))*
		public Group getGroup() { return cGroup; }

		//STRING | EXID
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0_0() { return cSTRINGTerminalRuleCall_0_0; }

		//EXID
		public RuleCall getEXIDTerminalRuleCall_0_1() { return cEXIDTerminalRuleCall_0_1; }

		//(" " (STRING | EXID))*
		public Group getGroup_1() { return cGroup_1; }

		//" "
		public Keyword getSpaceKeyword_1_0() { return cSpaceKeyword_1_0; }

		//STRING | EXID
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_1_0() { return cSTRINGTerminalRuleCall_1_1_0; }

		//EXID
		public RuleCall getEXIDTerminalRuleCall_1_1_1() { return cEXIDTerminalRuleCall_1_1_1; }
	}

	public class NOME_DO_ATORElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NOME_DO_ATOR");
		private final Assignment cNome_do_atorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNome_do_atorIDENTIFICADOR_GERALParserRuleCall_0 = (RuleCall)cNome_do_atorAssignment.eContents().get(0);
		
		//NOME_DO_ATOR:
		//	nome_do_ator=IDENTIFICADOR_GERAL;
		public ParserRule getRule() { return rule; }

		//nome_do_ator=IDENTIFICADOR_GERAL
		public Assignment getNome_do_atorAssignment() { return cNome_do_atorAssignment; }

		//IDENTIFICADOR_GERAL
		public RuleCall getNome_do_atorIDENTIFICADOR_GERALParserRuleCall_0() { return cNome_do_atorIDENTIFICADOR_GERALParserRuleCall_0; }
	}

	public class META_A_SER_ALCANCADAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "META_A_SER_ALCANCADA");
		private final Assignment cMeta_a_ser_alcancadaAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cMeta_a_ser_alcancadaIDENTIFICADOR_GERALParserRuleCall_0 = (RuleCall)cMeta_a_ser_alcancadaAssignment.eContents().get(0);
		
		//META_A_SER_ALCANCADA:
		//	meta_a_ser_alcancada=IDENTIFICADOR_GERAL;
		public ParserRule getRule() { return rule; }

		//meta_a_ser_alcancada=IDENTIFICADOR_GERAL
		public Assignment getMeta_a_ser_alcancadaAssignment() { return cMeta_a_ser_alcancadaAssignment; }

		//IDENTIFICADOR_GERAL
		public RuleCall getMeta_a_ser_alcancadaIDENTIFICADOR_GERALParserRuleCall_0() { return cMeta_a_ser_alcancadaIDENTIFICADOR_GERALParserRuleCall_0; }
	}

	public class RAZAO_PARA_ALCANCAR_A_METAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RAZAO_PARA_ALCANCAR_A_META");
		private final Assignment cRazao_para_alcancar_a_metaAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRazao_para_alcancar_a_metaIDENTIFICADOR_GERALParserRuleCall_0 = (RuleCall)cRazao_para_alcancar_a_metaAssignment.eContents().get(0);
		
		//RAZAO_PARA_ALCANCAR_A_META:
		//	razao_para_alcancar_a_meta=IDENTIFICADOR_GERAL;
		public ParserRule getRule() { return rule; }

		//razao_para_alcancar_a_meta=IDENTIFICADOR_GERAL
		public Assignment getRazao_para_alcancar_a_metaAssignment() { return cRazao_para_alcancar_a_metaAssignment; }

		//IDENTIFICADOR_GERAL
		public RuleCall getRazao_para_alcancar_a_metaIDENTIFICADOR_GERALParserRuleCall_0() { return cRazao_para_alcancar_a_metaIDENTIFICADOR_GERALParserRuleCall_0; }
	}
	
	
	private ModelElements pModel;
	private UsuarioMetaRazaoElements pUsuarioMetaRazao;
	private FuncionalidadeElements pFuncionalidade;
	private CenarioElements pCenario;
	private IdentificadorCenarioElements pIdentificadorCenario;
	private SentencaQualiteElements pSentencaQualite;
	private MetaElements pMeta;
	private ListaMetasElements pListaMetas;
	private ExecutarCenarioElements pExecutarCenario;
	private ListaItensElements pListaItens;
	private IDENTIFICADOR_CENARIOElements pIDENTIFICADOR_CENARIO;
	private TerminalRule tSTRING;
	private IDENTIFICADOR_GERALElements pIDENTIFICADOR_GERAL;
	private TerminalRule tINT;
	private TerminalRule tEXID;
	private TerminalRule tNL;
	private TerminalRule tWS;
	private NOME_DO_ATORElements pNOME_DO_ATOR;
	private META_A_SER_ALCANCADAElements pMETA_A_SER_ALCANCADA;
	private RAZAO_PARA_ALCANCAR_A_METAElements pRAZAO_PARA_ALCANCAR_A_META;
	private TerminalRule tML_COMMENT;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public StoryDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.gov.frameworkdemoiselle.behave.plugin.eclipse.dsl.StoryDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	NL* funcionalidade=Funcionalidade NL* usuarioMetaRazao+=UsuarioMetaRazao? cenarios+=Cenario+;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//UsuarioMetaRazao:
	//	"Como um: " nome_do_ator=NOME_DO_ATOR NL* "Eu quero: " meta_a_ser_alcancada=META_A_SER_ALCANCADA NL* "De modo que: "
	//	razao_para_alcancar_meta=RAZAO_PARA_ALCANCAR_A_META NL*;
	public UsuarioMetaRazaoElements getUsuarioMetaRazaoAccess() {
		return (pUsuarioMetaRazao != null) ? pUsuarioMetaRazao : (pUsuarioMetaRazao = new UsuarioMetaRazaoElements());
	}
	
	public ParserRule getUsuarioMetaRazaoRule() {
		return getUsuarioMetaRazaoAccess().getRule();
	}

	//Funcionalidade:
	//	"Funcionalidade: " nome_funcionadade=IDENTIFICADOR_GERAL NL*;
	public FuncionalidadeElements getFuncionalidadeAccess() {
		return (pFuncionalidade != null) ? pFuncionalidade : (pFuncionalidade = new FuncionalidadeElements());
	}
	
	public ParserRule getFuncionalidadeRule() {
		return getFuncionalidadeAccess().getRule();
	}

	//Cenario:
	//	"Cenário: " IdentificadorCenario xer+=NL* sentencas_qualite+=SentencaQualite*;
	public CenarioElements getCenarioAccess() {
		return (pCenario != null) ? pCenario : (pCenario = new CenarioElements());
	}
	
	public ParserRule getCenarioRule() {
		return getCenarioAccess().getRule();
	}

	//IdentificadorCenario:
	//	name=IDENTIFICADOR_CENARIO;
	public IdentificadorCenarioElements getIdentificadorCenarioAccess() {
		return (pIdentificadorCenario != null) ? pIdentificadorCenario : (pIdentificadorCenario = new IdentificadorCenarioElements());
	}
	
	public ParserRule getIdentificadorCenarioRule() {
		return getIdentificadorCenarioAccess().getRule();
	}

	//SentencaQualite:
	//	ExecutarCenario | ListaItens | Meta;
	public SentencaQualiteElements getSentencaQualiteAccess() {
		return (pSentencaQualite != null) ? pSentencaQualite : (pSentencaQualite = new SentencaQualiteElements());
	}
	
	public ParserRule getSentencaQualiteRule() {
		return getSentencaQualiteAccess().getRule();
	}

	//Meta:
	//	x="Meta:" NL* lista_metas+=ListaMetas+;
	public MetaElements getMetaAccess() {
		return (pMeta != null) ? pMeta : (pMeta = new MetaElements());
	}
	
	public ParserRule getMetaRule() {
		return getMetaAccess().getRule();
	}

	//ListaMetas:
	//	("@" | "@ ") IDENTIFICADOR_GERAL NL*;
	public ListaMetasElements getListaMetasAccess() {
		return (pListaMetas != null) ? pListaMetas : (pListaMetas = new ListaMetasElements());
	}
	
	public ParserRule getListaMetasRule() {
		return getListaMetasAccess().getRule();
	}

	//ExecutarCenario:
	//	("Dado " | "Quando " | "Então " | "E " | "Mas ") cenario_executar_ref=[Cenario|IDENTIFICADOR_CENARIO] NL*;
	public ExecutarCenarioElements getExecutarCenarioAccess() {
		return (pExecutarCenario != null) ? pExecutarCenario : (pExecutarCenario = new ExecutarCenarioElements());
	}
	
	public ParserRule getExecutarCenarioRule() {
		return getExecutarCenarioAccess().getRule();
	}

	//ListaItens:
	//	((("|" | "| ") item+=IDENTIFICADOR_GERAL)+ ("|" | " |") NL)+ NL*;
	public ListaItensElements getListaItensAccess() {
		return (pListaItens != null) ? pListaItens : (pListaItens = new ListaItensElements());
	}
	
	public ParserRule getListaItensRule() {
		return getListaItensAccess().getRule();
	}

	//IDENTIFICADOR_CENARIO:
	//	IDENTIFICADOR_GERAL;
	public IDENTIFICADOR_CENARIOElements getIDENTIFICADOR_CENARIOAccess() {
		return (pIDENTIFICADOR_CENARIO != null) ? pIDENTIFICADOR_CENARIO : (pIDENTIFICADOR_CENARIO = new IDENTIFICADOR_CENARIOElements());
	}
	
	public ParserRule getIDENTIFICADOR_CENARIORule() {
		return getIDENTIFICADOR_CENARIOAccess().getRule();
	}

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* ("\"" | "\"," | "\"." | "\';")
	//	| "\'" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* ("\'" | "\'," | "\'." |
	//	"\';");
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//IDENTIFICADOR_GERAL:
	//	(STRING | EXID) (" " (STRING | EXID))*;
	public IDENTIFICADOR_GERALElements getIDENTIFICADOR_GERALAccess() {
		return (pIDENTIFICADOR_GERAL != null) ? pIDENTIFICADOR_GERAL : (pIDENTIFICADOR_GERAL = new IDENTIFICADOR_GERALElements());
	}
	
	public ParserRule getIDENTIFICADOR_GERALRule() {
		return getIDENTIFICADOR_GERALAccess().getRule();
	}

	////TODO Verificar o problema com os inteiros conflitando com o terminal ID 
	//terminal INT returns ecore::EInt:
	//	"³" "0".."9";
	public TerminalRule getINTRule() {
		return (tINT != null) ? tINT : (tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT"));
	} 

	//terminal EXID:
	//	("a".."z" | "A".."Z" | "0".."9" | "." | "," | "(" | ")" | "-" | "/" | "_" | ":" | "²" | "³" | "à" | "á" | "â" | "ã" |
	//	"é" | "ê" | "í" | "ó" | "ô" | "õ" | "ú" | "ü" | "ç" | "À" | "Á" | "Â" | "Ã" | "É" | "Ê" | "Í" | "Ó" | "Ô" | "Õ" | "Ú"
	//	| "Ü" | "Ç")+;
	public TerminalRule getEXIDRule() {
		return (tEXID != null) ? tEXID : (tEXID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EXID"));
	} 

	//terminal NL:
	//	("\n" | "\r")+;
	public TerminalRule getNLRule() {
		return (tNL != null) ? tNL : (tNL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NL"));
	} 

	//terminal WS:
	//	("\t" | " ")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//NOME_DO_ATOR:
	//	nome_do_ator=IDENTIFICADOR_GERAL;
	public NOME_DO_ATORElements getNOME_DO_ATORAccess() {
		return (pNOME_DO_ATOR != null) ? pNOME_DO_ATOR : (pNOME_DO_ATOR = new NOME_DO_ATORElements());
	}
	
	public ParserRule getNOME_DO_ATORRule() {
		return getNOME_DO_ATORAccess().getRule();
	}

	//META_A_SER_ALCANCADA:
	//	meta_a_ser_alcancada=IDENTIFICADOR_GERAL;
	public META_A_SER_ALCANCADAElements getMETA_A_SER_ALCANCADAAccess() {
		return (pMETA_A_SER_ALCANCADA != null) ? pMETA_A_SER_ALCANCADA : (pMETA_A_SER_ALCANCADA = new META_A_SER_ALCANCADAElements());
	}
	
	public ParserRule getMETA_A_SER_ALCANCADARule() {
		return getMETA_A_SER_ALCANCADAAccess().getRule();
	}

	//RAZAO_PARA_ALCANCAR_A_META:
	//	razao_para_alcancar_a_meta=IDENTIFICADOR_GERAL;
	public RAZAO_PARA_ALCANCAR_A_METAElements getRAZAO_PARA_ALCANCAR_A_METAAccess() {
		return (pRAZAO_PARA_ALCANCAR_A_META != null) ? pRAZAO_PARA_ALCANCAR_A_META : (pRAZAO_PARA_ALCANCAR_A_META = new RAZAO_PARA_ALCANCAR_A_METAElements());
	}
	
	public ParserRule getRAZAO_PARA_ALCANCAR_A_METARule() {
		return getRAZAO_PARA_ALCANCAR_A_METAAccess().getRule();
	}

	//terminal ML_COMMENT:
	//	"/ ** /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
